---
import Layout from './Layout.astro';

const { frontmatter } = Astro.props;

// 読了時間を計算（日本語の平均読了速度: 約350文字/分）
function calculateReadingTime(content: string): number {
	const textWithoutMarkdown = content.replace(/[#*`\[\]]/g, '');
	const charCount = textWithoutMarkdown.length;
	const readingTimeMinutes = Math.ceil(charCount / 350);
	return readingTimeMinutes;
}

const content = await Astro.slots.render('default');
const readingTime = calculateReadingTime(content);
---

<Layout title={frontmatter.title}>
	<article class="container">
		<header>
			<h1>{frontmatter.title}</h1>
			
			{frontmatter.description && (
				<p class="description">{frontmatter.description}</p>
			)}
			
			<div class="meta">
				<time datetime={frontmatter.pubDate}>
					{new Date(frontmatter.pubDate).toLocaleDateString('ja-JP', {
						year: 'numeric',
						month: 'long',
						day: 'numeric'
					})}
				</time>
				<span>約{readingTime}分で読めます</span>
			</div>
			
			{frontmatter.tags && (
				<div class="tags">
					{frontmatter.tags.map((tag) => (
						<span class="tag">#{tag}</span>
					))}
				</div>
			)}
		</header>

		<main class="content">
			<slot />
		</main>

		<footer class="article-footer">
			<div class="back-link">
				<a href="/">← ホームへ戻る</a>
			</div>
		</footer>
	</article>
</Layout>

<script>
	// コードブロックにコピーボタンを追加
	document.addEventListener('DOMContentLoaded', () => {
		const codeBlocks = document.querySelectorAll('pre');
		
		codeBlocks.forEach((pre) => {
			// コピーボタンを作成
			const copyButton = document.createElement('button');
			copyButton.textContent = 'Copy';
			
			// pre要素を相対位置に設定
			pre.style.position = 'relative';
			
			// コピー機能
			copyButton.addEventListener('click', async () => {
				const code = pre.textContent || '';
				try {
					await navigator.clipboard.writeText(code);
					copyButton.textContent = 'Copied!';
					
					setTimeout(() => {
						copyButton.textContent = 'Copy';
					}, 2000);
				} catch (err) {
					console.error('Failed to copy: ', err);
				}
			});
			
			pre.appendChild(copyButton);
		});
	});
</script>

<style>
	article {
		padding: 2rem 0;
	}
	
	header {
		padding-bottom: 2rem;
		border-bottom: 1px solid var(--color-gray-200);
		margin-bottom: 3rem;
	}
	
	.article-footer {
		padding-top: 3rem;
		border-top: 1px solid var(--color-gray-200);
		margin-top: 3rem;
		text-align: center;
	}
	
	.back-link a {
		color: var(--color-gray-600);
		text-decoration: none;
		font-size: 0.9rem;
		transition: color 0.2s ease;
		display: inline-block;
		padding: 0.5rem 1rem;
		border: 1px solid var(--color-gray-200);
		border-radius: 6px;
	}
	
	.back-link a:hover {
		color: var(--color-black);
		border-color: var(--color-black);
		text-decoration: none;
	}
	
	header h1 {
		margin-bottom: 1rem;
		line-height: 1.2;
	}
	
	.description {
		font-size: 1.1rem;
		color: var(--color-gray-600);
		margin-bottom: 1.5rem;
		line-height: 1.6;
	}
	
	.meta {
		display: flex;
		gap: 1.5rem;
		font-size: 0.875rem;
		color: var(--color-gray-600);
		margin-bottom: 1.5rem;
	}
	
	.tags {
		display: flex;
		gap: 0.5rem;
		flex-wrap: wrap;
	}
	
	.tag {
		font-size: 0.875rem;
		color: var(--color-gray-600);
		background: none;
		font-weight: 400;
	}
	
	.content {
		line-height: 1.7;
	}
	
	/* Copy button styling */
	pre button {
		position: absolute;
		top: 0.5rem;
		right: 0.5rem;
		background: var(--color-gray-100);
		border: 1px solid var(--color-gray-200);
		color: var(--color-gray-600);
		font-size: 0.75rem;
		padding: 0.25rem 0.5rem;
		border-radius: 3px;
		cursor: pointer;
		transition: all 0.2s ease;
	}
	
	pre button:hover {
		background: var(--color-gray-200);
		color: var(--color-black);
	}

	/* Mobile Post Layout */
	@media (max-width: 768px) {
		article {
			padding: 1.5rem 0;
		}
		
		header {
			padding-bottom: 1.5rem;
			margin-bottom: 2rem;
		}
		
		.meta {
			flex-direction: column;
			gap: 0.5rem;
			align-items: flex-start;
		}
		
		.tags {
			margin-top: 0.5rem;
		}
		
		.article-footer {
			padding-top: 2rem;
			margin-top: 2rem;
		}
		
		pre button {
			position: static;
			margin-top: 0.5rem;
			align-self: flex-end;
		}
		
		pre {
			position: relative;
			display: flex;
			flex-direction: column;
		}
	}
</style>